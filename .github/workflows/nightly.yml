name: Dog Api

on:
  schedule:
    - cron: '0 22 * * *'
  push:
    branches: [ 'main', '*/*' ]
  pull_request:
    branches: [ 'main', '*/*' ]
  
jobs:
  build:
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"
      
      - name: Create Build Number
        run: |
          echo "BUILD_NUMBER=${{github.run_number}}-${{github.run_id}}-${{github.run_attempt}}"

      - name: Restore
        run: dotnet restore src/DogApiMicroservice.sln

      - name: Build
        run: dotnet build src/DogApiMicroservice.sln --no-restore -c Release

      - name: End-to-End Tests
        run: dotnet test src/Dog.Api.E2ETests/Dog.Api.E2ETests.csproj --no-build --no-restore -c Release --collect:"XPlat Code Coverage" --results-directory ./coverage
        env:
          SplitIO__UserId: ${{secrets.SPLITIO__USERID}}
          SplitIO__ApiKey: ${{secrets.SPLITIO_APIKEY}}
          SplitIO__TreatmentName: ${{secrets.SPLITIO_TREATMENTNAME}}
          SplitIO__WaitTime: ${{secrets.SPLITIO_WAITTIME}}

      - name: Copy Coverage To Predictable Location
        run: cp coverage/**/coverage.cobertura.xml coverage.cobertura.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.cobertura.xml
          flags: e2etests
          name: codecov-dog-api
          fail_ci_if_error: true
          verbose: true
